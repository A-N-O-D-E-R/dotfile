#!/bin/sh

cd $HOME

getMachine () {
    local unameOut="$(uname -s)"
    case "${unameOut}" in
        Linux*)     local machine=linux;;
        Darwin*)    local machine=darwin;;
        CYGWIN*)    local machine=cygwin;;
        MINGW*)     local machine=minGw;;
        *)          local machine="UNKNOWN:${unameOut}"
    esac
    echo "$machine"
}

isMachine () {
  if [ $(getMachine) = $1 ];then
    return 0;
  fi
  return 1;
}

wantTo () {
 read -p "Do you want to bootstrap $1? [Y/n] " response
 case $response in [yY][eE][sS]|[yY]|[jJ]|'') 
     return 0;
     ;;
     *)
     echo "cancelled"
     return 1;
     ;;
 esac
}


bootstrap_essentials () {
  local deps="git bat tmux neofetch ripgrep fzf zoxide python3-dev python3-pip python3-setuptools zsh curl jq openjdk-17-jdk gpg software-properties-common"

  isMachine "linux" && \
    sudo apt update -y && \
    sudo apt upgrade -y && \
    sudo apt install $deps -y

  #APT is a shitty packet manager
  sudo snap install nvim --classic
  sudo luarocks install luacheck

  bootstrap_pip
  bootstrap_script

}


bootstrap_pip (){
  pip3 install thefuck --user
}


bootstrap_script (){
  sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d || {
    echo "Could not install taskfile" >/dev/stderr
    exit 1
  }
  
  chsh -s $(which zsh)

  sh -c "$(curl -fsSL https://raw.githubusercontent.com/loket/oh-my-zsh/feature/batch-mode/tools/install.sh)" -s --batch || {
    echo "Could not install Oh My Zsh" >/dev/stderr
    exit 1
  }

  locale-gen --purge fr_FR.UTF-8
  sudo echo -e 'LANG="fr_FR.UTF-8"\nLANGUAGE="fr_FR.UTF-8"\n' > /etc/default/locale
}



bootstrap_docker (){
  ID=$(. /etc/os-release; echo "$ID")
  LSB_RELEASE=$(lsb_release -cs)
  curl -fsSL https://download.docker.com/linux/${ID}/gpg | sudo apt-key add -
  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/${ID} ${LSB_RELEASE} stable"
  sudo apt update
  sudo apt -y install docker-ce docker-compose
  sudo systemctl enable docker
  sudo systemctl start docker
}


if isMachine "linux"; then
  wantTo "Essentials Install" && bootstrap_essentials
  wantTo "Docker" && bootstrap_docker
fi
